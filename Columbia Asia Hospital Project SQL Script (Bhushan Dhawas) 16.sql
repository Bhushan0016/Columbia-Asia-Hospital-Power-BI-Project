

-- OBJECTIVE QUESTIONS

-- Task-15. Identify the top 5 doctors who generated the most revenue but had the fewest patients. (SQL)

SELECT
	`Doctor Name` AS Doctor,
     SUM(`Total Bill`) AS Revenue,
    COUNT(DISTINCT patient_id) AS no_of_patients
FROM doctor
GROUP BY Doctor
ORDER BY  Revenue desc , no_of_patients asc 
limit 5;


-- Task 16- Find the department where the average waiting time has decreased over three consecutive months. (SQL)

WITH AvgWaitTimeByMonth AS (
    SELECT 
        department_referral, 
        `date`,
        ROUND(AVG(patient_waittime), 2) AS AvgWaitTime
    FROM 
        hospital
    GROUP BY 
        department_referral, `date`),
WaitTimeWithLag AS (
    SELECT 
        department_referral, 
        `date`, 
        AvgWaitTime,
        LAG(AvgWaitTime, 1) OVER (PARTITION BY department_referral ORDER BY `date`) AS PrevMonthAvg,
        LAG(AvgWaitTime, 2) OVER (PARTITION BY department_referral ORDER BY `date`) AS TwoMonthsAgoAvg,
        LAG(AvgWaitTime, 3) OVER (PARTITION BY department_referral ORDER BY `date`) AS ThreeMonthsAgoAvg
    FROM 
        AvgWaitTimeByMonth)
SELECT 
    department_referral
FROM 
    WaitTimeWithLag
WHERE 
    AvgWaitTime < PrevMonthAvg
    AND PrevMonthAvg < TwoMonthsAgoAvg
    AND TwoMonthsAgoAvg < ThreeMonthsAgoAvg
GROUP BY 
    department_referral;
    
    
    -- Task-17. Determine the ratio of male to female patients for each doctor and rank the doctors based on this ratio. (SQL)

with patientCount as (
	select
		d.`Doctor Name` as Doctor_Name,
        sum(case when h.patient_gender = "M" then 1 else 0 end) male_count,
        sum(case when h.patient_gender = "F" then 1 else 0 end) female_count
	from hospital as  h 
    join doctor as d on h.patient_id = d.patient_id
    group by Doctor_Name),
DoctorRatios as (
	select
		Doctor_Name,
        male_count,
        female_count,
        round((male_count/female_count),2) as Male_To_Female_ratio
	from patientCount)
select 
	Doctor_Name,
    male_count,
    female_count,
    Male_To_Female_ratio,
    Dense_rank() over( order by Male_To_Female_ratio desc) as Ranking 
from DoctorRatios;


-- Task 18- Calculate the average satisfaction score of patients for each doctor based on their visits. (SQL)

select 
	d.`Doctor Name` as Doctor_Name,
    round(avg(case when h.patient_sat_score = "" then 5 else h.patient_sat_score end),2) as patient_sat_score
from hospital as h 
join doctor as  d 
on h.patient_id = d.patient_id
group by Doctor_Name
order by patient_sat_score desc;


-- Task-19. Find doctors who have treated patients from different races and calculate the diversity of their patient base. (SQL)

select
	d.`Doctor Name` as Doctor_Name,
    count(distinct h.patient_race) as differnet_race_count
from hospital as h 
join doctor as d
on h.patient_id = d.patient_id
group by Doctor_Name
having count(distinct h.patient_race) >1
order by differnet_race_count desc;


-- Task-20. Calculate the ratio of total bills generated by male patients to female patients for each department. (SQL)

select
	h.department_referral,
    sum(case when patient_gender = "M" then d.`Total Bill` end) as Male_total_bill,
	sum(case when patient_gender = "F" then d.`Total Bill` end) as Female_total_bill,
    round(sum(case when patient_gender = "M" then d.`Total Bill` end) / sum(case when patient_gender = "F" then d.`Total Bill` end),2) as Male_To_Female_Ratio
from hospital as h 
join doctor as d
on h.patient_id = d.patient_id
group by h.department_referral;


-- Task-21. Update the patient satisfaction score for all patients who visited the "General Practice" department and 
-- had a waiting time of more than 30 minutes. Increase their satisfaction score by 2 points, but ensure that the 
-- satisfaction score does not exceed 10. (SQL)

UPDATE hospital
SET patient_sat_score = LEAST(patient_sat_score + 2,10)
WHERE LOWER(department_referral) = "general practice" AND patient_waittime > 30;



